# This script reformats MMseq2 alignment table to .a3m
# It will generate a file named "{ID}.a3m" in the working directory. You need to
# be in the directory generated with run_MMseqs2_to_get_DiscobaMSA.sh that
# contains the query.tab file.

# Script argument: ID
# Call (shell): python3 reformat_mmseq_table.py <protein_ID>
# Example: python3 reformat_mmseq_table.py C4B63_28g81

import sys

# Check input
if len(sys.argv) != 2:
    print("USAGE: python3 reformat_mmseq_table.py <protein_ID>")
    sys.exit(1)

# Parse argument
ID = sys.argv[1] 

# libraries needed
import re

# output file
a3m_file = f"{ID}.a3m"

# This is for the ColabFold MMseqs2 alignment
# =============================================================================
# from shutil import copyfile
# import os.path

# if os.path.isfile(ID + ".original.a3m"):
#   #If the original (remote MMseq) backup .am3 does not exist do the backup
#   copyfile(ID + ".original.a3m", ID +".a3m")
# else:
#   #If the original (remote MMseq) backup .am3 does exist, copy it for modification
#   copyfile(ID + ".a3m", ID + ".original.a3m")
# =============================================================================

# Location of the .tab file generated by MMseqs2
mmseq_tab=open("queryDB.tab", "r")

# Proecessing of the tab file
mmseq_data=mmseq_tab.readlines()
mmseq_out=open(ID+".a3m", "a")
mmseq_count=0
for mmseq_line in mmseq_data:
  mmseq_line=mmseq_line.replace("\r", "").replace("\n", "").split("\t")
  mmseq_count+=1
  #Parse cigar
  mmseq_cigar=re.findall('(\d+)([MDI])?', mmseq_line[7])
  #Pad start of alignment
  alignment_seq="-"*(int(mmseq_line[2])-1)
  alignment_index=int(mmseq_line[4])-1;
  #Loop through cigar re-writing sequence
  for cigar_entry in mmseq_cigar:
    for sequence_index in range(0, int(cigar_entry[0])):
      if cigar_entry[1]=="M":
        alignment_seq+=mmseq_line[6][alignment_index:alignment_index+1].upper()
        alignment_index+=1
      elif cigar_entry[1]=="D":
        alignment_seq+=mmseq_line[6][alignment_index:alignment_index+1].lower()
        alignment_index+=1
      elif cigar_entry[1]=="I":
        alignment_seq+="-"
  #Pad end of alignment
  alignment_seq=alignment_seq+("-"*(int(mmseq_line[1])-int(mmseq_line[3])))
  #Write result
  mmseq_out.write(">%s\n" % mmseq_line[0])
  mmseq_out.write("%s\n" % alignment_seq)
mmseq_out.close()
print("%d new sequences added (no redundancy filtering)" % mmseq_count)
